{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setauthtoken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, CLEAR_PROFILE } from './types'; // LOAD USER\n\nexport const loaduser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    console.log(res.data);\n    dispatch(loaduser());\n  } catch (err) {\n    var errors;\n    if (err) errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loaduser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Web Development Codes/Projects/movie_app_original/client/src/action/auth.js"],"names":["axios","setAlert","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","CLEAR_PROFILE","loaduser","dispatch","localStorage","token","res","get","type","payload","data","error","register","name","email","password","config","headers","body","JSON","stringify","post","console","log","err","errors","response","forEach","e","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport setAuthToken  from '../utils/setauthtoken';\r\nimport { \r\n    REGISTER_SUCCESS, \r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    CLEAR_PROFILE,\r\n} from './types';\r\n\r\n\r\n// LOAD USER\r\nexport const loaduser=()=> async dispatch=>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n        const res=await axios.get('/api/auth');\r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const register=({name,email,password}) => async dispatch=>{\r\n    const config={\r\n        headers:{\r\n            'Content-type':'application/json' \r\n        }\r\n    }\r\n    const body=JSON.stringify({name,email,password});\r\n    try{\r\n        const res=await axios.post('/api/users',body,config);\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:res.data\r\n        });\r\n        console.log(res.data);\r\n        dispatch(loaduser());\r\n    }catch(err){\r\n        var errors;\r\n        if(err)  errors=err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(e=> dispatch(setAlert(e.msg,'danger')));\r\n        }\r\n        dispatch({\r\n            type:REGISTER_FAIL,\r\n        }) \r\n    }\r\n}\r\n\r\n\r\nexport const login=({email,password}) => async dispatch=>{\r\n    const config={\r\n        headers:{\r\n            'Content-type':'application/json' \r\n        }\r\n    }\r\n    const body=JSON.stringify({email,password});\r\n    try{\r\n        const res=await axios.post('/api/auth',body,config);\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:res.data\r\n        });\r\n        dispatch(loaduser());\r\n    }catch(err){\r\n        const errors=err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(e=> dispatch(setAlert(e.msg,'danger')));\r\n        }\r\n        dispatch({\r\n            type:LOGIN_FAIL,\r\n        }) \r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>dispatch=>{\r\n    dispatch({\r\n        type:CLEAR_PROFILE\r\n    });\r\n    dispatch({\r\n        type:LOGOUT\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}