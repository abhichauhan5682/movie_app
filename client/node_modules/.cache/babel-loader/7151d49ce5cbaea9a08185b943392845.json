{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development Codes\\\\Projects\\\\movie_app_original\\\\client\\\\src\\\\components\\\\favouritepage\\\\favouritepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { IMAGE_URL } from '../../config/default';\nimport { Typography, Popover, Button } from 'antd';\nimport { setAlert } from '../../action/alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst FavouritePage = props => {\n  _s();\n\n  const [favMovies, setfavMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const variable = {\n    userFrom: props.user._id\n  };\n  useEffect(() => {\n    if (props.isAuth) {\n      fetchFavoredMovie();\n    }\n  }, []);\n\n  const fetchFavoredMovie = async () => {\n    const res = await axios.post('/api/favourite/getFavouredMovie', variable); // .then(response=>{\n    //     if(response.data.success){\n    //         console.log(response.data.favorites);\n    //         setfavMovies(response.data.favorites);\n    //         setLoading(false);\n    //     }else{\n    //         console.log(\"error\");\n    //     }\n    // })\n\n    if (res.data.success) {\n      console.log(res.data.favorites);\n      setfavMovies(res.data.favorites);\n      setLoading(false);\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  const onClickDelete = async (movieId, userFrom) => {\n    const variables = {\n      movieId: movieId,\n      userFrom: userFrom\n    }; // axios.post('/api/favourite/removeFromFavourite', variables)\n    //     .then(response => {\n    //         if (response.data.success) {\n    //             console.log(\"remove\");\n    //             fetchFavoredMovie()\n    //         } else {\n    //             alert('Failed to Remove From Favorite')\n    //         }\n    //     })\n\n    const res = await axios.post('/api/favourite/removeFromFavourite', variables);\n\n    if (res.data.success) {\n      props.setAlert(\"Successfully Removed from your Favourite List\", \"success\");\n      console.log(\"remove\");\n      fetchFavoredMovie();\n    } else {\n      props.setAlert(\"Error take place during Removal\", \"danger\");\n    }\n  };\n\n  const renderCards = favMovies.map((favorite, index) => {\n    const content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: favorite.movieImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${IMAGE_URL}w500${favorite.movieImage}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : \"no image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(Popover, {\n        content: content,\n        title: `${favorite.movieTitle}`,\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: favorite.movieTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [favorite.movieRunTime, \" mins\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickDelete(favorite.movieId, favorite.userFrom),\n          children: \" Remove \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \" Favorite Movies By Me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Movie Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Movie RunTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Remove from favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FavouritePage, \"a1ZCBRv8pcZ6KWzrWMr9y+3rmBg=\");\n\n_c = FavouritePage;\nFavouritePage.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  user: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  setAlert\n})(FavouritePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"FavouritePage\");","map":{"version":3,"sources":["C:/Web Development Codes/Projects/movie_app_original/client/src/components/favouritepage/favouritepage.js"],"names":["React","useEffect","useState","axios","connect","PropTypes","IMAGE_URL","Typography","Popover","Button","setAlert","Title","FavouritePage","props","favMovies","setfavMovies","loading","setLoading","variable","userFrom","user","_id","isAuth","fetchFavoredMovie","res","post","data","success","console","log","favorites","onClickDelete","movieId","variables","renderCards","map","favorite","index","content","movieImage","movieTitle","movieRunTime","width","margin","propTypes","func","isRequired","bool","object","mapStateToProps","state","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,QAA4C,MAA5C;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAYJ,UAAlB;;AACA,MAAMK,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAK,CAACc,OAAD,EAASC,UAAT,IAAqBf,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMgB,QAAQ,GAAC;AACXC,IAAAA,QAAQ,EAACN,KAAK,CAACO,IAAN,CAAWC;AADT,GAAf;AAGApB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGY,KAAK,CAACS,MAAT,EAAgB;AACZC,MAAAA,iBAAiB;AACpB;AACJ,GAJQ,EAIP,EAJO,CAAT;;AAKA,QAAMA,iBAAiB,GAAC,YAAU;AAC9B,UAAMC,GAAG,GAAC,MAAMrB,KAAK,CAACsB,IAAN,CAAW,iCAAX,EAA6CP,QAA7C,CAAhB,CAD8B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACJ,QAAGM,GAAG,CAACE,IAAJ,CAASC,OAAZ,EAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,IAAJ,CAASI,SAArB;AACAf,MAAAA,YAAY,CAACS,GAAG,CAACE,IAAJ,CAASI,SAAV,CAAZ;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD,MAIK;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,GAlBD;;AAmBA,QAAME,aAAa,GAAC,OAAOC,OAAP,EAAgBb,QAAhB,KAA2B;AAC3C,UAAMc,SAAS,GAAG;AACdD,MAAAA,OAAO,EAAEA,OADK;AAEdb,MAAAA,QAAQ,EAAEA;AAFI,KAAlB,CAD2C,CAM3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMK,GAAG,GAAC,MAAMrB,KAAK,CAACsB,IAAN,CAAW,oCAAX,EAAgDQ,SAAhD,CAAhB;;AACA,QAAGT,GAAG,CAACE,IAAJ,CAASC,OAAZ,EAAoB;AAChBd,MAAAA,KAAK,CAACH,QAAN,CAAe,+CAAf,EAA+D,SAA/D;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAN,MAAAA,iBAAiB;AACpB,KAJD,MAIK;AACDV,MAAAA,KAAK,CAACH,QAAN,CAAe,iCAAf,EAAiD,QAAjD;AACH;AACJ,GAvBD;;AAwBA,QAAMwB,WAAW,GAAGpB,SAAS,CAACqB,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAGnD,UAAMC,OAAO,gBACT;AAAA,gBACKF,QAAQ,CAACG,UAAT,gBACG;AAAK,QAAA,GAAG,EAAG,GAAEjC,SAAU,OAAM8B,QAAQ,CAACG,UAAW;AAAjD;AAAA;AAAA;AAAA;AAAA,cADH,GAEK;AAHV;AAAA;AAAA;AAAA;AAAA,YADJ;;AAQA,wBAAO;AAAA,8BAEH,QAAC,OAAD;AAAS,QAAA,OAAO,EAAED,OAAlB;AAA2B,QAAA,KAAK,EAAG,GAAEF,QAAQ,CAACI,UAAW,EAAzD;AAAA,+BACI;AAAA,oBAAKJ,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFG,eAMH;AAAA,mBAAKJ,QAAQ,CAACK,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cANG,eAOH;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAE,MAAMV,aAAa,CAACK,QAAQ,CAACJ,OAAV,EAAmBI,QAAQ,CAACjB,QAA5B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAPG;AAAA,OAASkB,KAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AASH,GApBmB,CAApB;AAqBA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAZ;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQ,CAAC3B,OAAD,iBACA;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAEQkB;AAFR;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAlGD;;GAAMtB,a;;KAAAA,a;AAoGNA,aAAa,CAACgC,SAAd,GAAwB;AACxBlC,EAAAA,QAAQ,EAACL,SAAS,CAACwC,IAAV,CAAeC,UADA;AAExBxB,EAAAA,MAAM,EAACjB,SAAS,CAAC0C,IAAV,CAAeD,UAFE;AAGxB1B,EAAAA,IAAI,EAACf,SAAS,CAAC2C;AAHS,CAAxB;;AAKA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC9B5B,EAAAA,MAAM,EAAC4B,KAAK,CAACC,IAAN,CAAW7B,MADY;AAE9BF,EAAAA,IAAI,EAAC8B,KAAK,CAACC,IAAN,CAAW/B;AAFc,CAAH,CAA3B;;AAKA,eAAehB,OAAO,CAAC6C,eAAD,EAAiB;AAACvC,EAAAA;AAAD,CAAjB,CAAP,CAAoCE,aAApC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {IMAGE_URL} from '../../config/default';\r\nimport { Typography, Popover, Button } from 'antd';\r\nimport {setAlert} from '../../action/alert';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst FavouritePage = (props) => {\r\n    const [favMovies,setfavMovies]=useState([]);\r\n    const[loading,setLoading]=useState(true);\r\n    const variable={\r\n        userFrom:props.user._id\r\n    }\r\n    useEffect(()=>{\r\n        if(props.isAuth){\r\n            fetchFavoredMovie();\r\n        } \r\n    },[]);\r\n    const fetchFavoredMovie=async ()=>{\r\n        const res=await axios.post('/api/favourite/getFavouredMovie',variable);\r\n            // .then(response=>{\r\n            //     if(response.data.success){\r\n            //         console.log(response.data.favorites);\r\n            //         setfavMovies(response.data.favorites);\r\n            //         setLoading(false);\r\n            //     }else{\r\n            //         console.log(\"error\");\r\n            //     }\r\n            // })\r\n        if(res.data.success){\r\n            console.log(res.data.favorites);\r\n            setfavMovies(res.data.favorites);\r\n            setLoading(false);\r\n        }else{\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    const onClickDelete=async (movieId, userFrom)=>{\r\n        const variables = {\r\n            movieId: movieId,\r\n            userFrom: userFrom,\r\n        }\r\n\r\n        // axios.post('/api/favourite/removeFromFavourite', variables)\r\n        //     .then(response => {\r\n        //         if (response.data.success) {\r\n        //             console.log(\"remove\");\r\n        //             fetchFavoredMovie()\r\n        //         } else {\r\n        //             alert('Failed to Remove From Favorite')\r\n        //         }\r\n        //     })\r\n        const res=await axios.post('/api/favourite/removeFromFavourite',variables);\r\n        if(res.data.success){\r\n            props.setAlert(\"Successfully Removed from your Favourite List\",\"success\");\r\n            console.log(\"remove\");\r\n            fetchFavoredMovie();\r\n        }else{\r\n            props.setAlert(\"Error take place during Removal\",\"danger\");\r\n        }\r\n    }\r\n    const renderCards = favMovies.map((favorite, index) => {\r\n\r\n\r\n        const content = (\r\n            <div>\r\n                {favorite.movieImage ?\r\n                    <img src={`${IMAGE_URL}w500${favorite.movieImage}`} />\r\n                    : \"no image\"}\r\n            </div>\r\n        );\r\n\r\n        return <tr key={index}>\r\n\r\n            <Popover content={content} title={`${favorite.movieTitle}`}>\r\n                <td>{favorite.movieTitle}</td>\r\n            </Popover>\r\n\r\n            <td>{favorite.movieRunTime} mins</td>\r\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}> Remove </button></td>\r\n        </tr>\r\n    })\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Favorite Movies By Me </Title>\r\n            <hr />\r\n            {\r\n                !loading &&\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Movie Title</th>\r\n                            <th>Movie RunTime</th>\r\n                            <td>Remove from favorites</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            renderCards\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nFavouritePage.propTypes={\r\nsetAlert:PropTypes.func.isRequired,\r\nisAuth:PropTypes.bool.isRequired,\r\nuser:PropTypes.object,\r\n}\r\nconst mapStateToProps=state=>({\r\nisAuth:state.auth.isAuth,\r\nuser:state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert})(FavouritePage);\r\n"]},"metadata":{},"sourceType":"module"}