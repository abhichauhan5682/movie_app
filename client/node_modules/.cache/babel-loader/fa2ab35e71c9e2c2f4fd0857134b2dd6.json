{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development Codes\\\\Projects\\\\movie_app_original\\\\client\\\\src\\\\components\\\\post\\\\post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { setAlert } from '../../action/alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\n\nconst Post = props => {\n  _s();\n\n  const [formData, setData] = useState(\"\");\n  const [Posts, setPosts] = useState(\"\");\n  useEffect(() => {\n    getAllPost();\n  }, []);\n\n  const getAllPost = async () => {\n    const res = await axios.get('/api/posts/getposts');\n    console.log(res.data);\n    if (res.data.success) setPosts(res.data.post);\n  };\n\n  const handleChange = e => {\n    setData(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    if (props.auth.isAuth === false) {\n      props.setAlert(\"Please Login to add a post\", \"danger\");\n    }\n\n    e.preventDefault();\n\n    if (props.auth.isAuth === true) {\n      const variables = {\n        text: formData\n      }; //console.log(variables)\n\n      axios.post('/api/posts/setpost', variables).then(response => {\n        if (response.data.success) {\n          setData(\"\");\n          getAllPost();\n        } else {\n          alert('Failed to save Post');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Posts\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          fontSize: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 46\n        }, this), \" Welcome to the Community\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar-posts\",\n        children: \"Post Something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          className: \"form-control\",\n          style: {\n            width: '100%',\n            borderRadius: '5px',\n            height: '130px'\n          },\n          onChange: handleChange,\n          value: formData,\n          placeholder: \"Write a post to ask suggestion from other user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-dark submit-btn\",\n          style: {\n            width: '20%',\n            height: '52px'\n          },\n          onClick: onSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: true,\n        children: Posts.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 42\n        }, this) : Posts.map((p, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row posting mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2 avatar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-user avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 77\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"name\",\n                children: p.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 116\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn like\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-thumbs-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 84\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn dislike\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-thumbs-down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 87\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/posts/${p._id}`,\n                className: \"btn discussion-btn\",\n                children: \"Discussion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this) // <div className=\"main-chatbox-container\">\n  //     <h1 className=\"Posts\">Posts</h1>\n  //     <b style=\"font-size: 17px;\"><i className=\"fas fa-users\"></i> Welcome to the Community</b>\n  //     <div className=\"top-bar-posts\">\n  //         Post Something...\n  //     </div>\n  //     <textarea className=\"form-control\" style=\"resize: none; height: 130px;\" placeholder=\"Create a Post...\"></textarea>\n  //     <button className=\"btn btn-dark submit-btn\" >Submit</button>\n  //     <div className=\"row post-container\">\n  //         <div className=\"col-2 avatar-container\"><i className=\"fas fa-user avatar\" ></i><b className=\"name\">name</b></div>\n  //         <div className=\"col\">\n  //             <p>taque eveniet! Expedim inventore doloribus natus itaque nobis? Est, velit! Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero, iste nostrum dolor, veniam voluptatibus atque molestiae illo temporibus ea vitae saepe omnis quas esse at perferendis ut nam perspiciatis excepturi?</p>\n  //             <button type=\"button\" className=\"btn like\"><i className=\"far fa-thumbs-up\"></i></button>\n  //             <button type=\"button\" className=\"btn dislike\"><i className=\"far fa-thumbs-down\"></i></button>\n  //             <button className=\"btn discussion-btn\">Discussion</button>\n  //         </div>\n  //     </div>\n  // </div>\n  ;\n};\n\n_s(Post, \"okcQjxqDwOBnflJOYxyufY3Sz0k=\");\n\n_c = Post;\nPost.propTypes = {\n  auth: PropTypes.object.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setAlert\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Web Development Codes/Projects/movie_app_original/client/src/components/post/post.js"],"names":["React","useState","useEffect","Fragment","Button","Input","Typography","connect","PropTypes","axios","Link","setAlert","TextArea","Title","Post","props","formData","setData","Posts","setPosts","getAllPost","res","get","console","log","data","success","post","handleChange","e","currentTarget","value","onSubmit","auth","isAuth","preventDefault","variables","text","then","response","alert","fontSize","width","borderRadius","height","length","map","p","i","name","content","_id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,Fragment} from 'react'\r\nimport { Button, Input, Typography, } from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {setAlert} from '../../action/alert';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst Post = (props) => {\r\n    const [formData,setData]=useState(\"\");\r\n    const [Posts,setPosts]=useState(\"\");\r\n    useEffect(()=>{\r\n        getAllPost();\r\n    },[])\r\n    const getAllPost=async()=>{\r\n        const res=await axios.get('/api/posts/getposts');\r\n        console.log(res.data);\r\n        if(res.data.success) setPosts(res.data.post);\r\n    }\r\n    const handleChange = (e) => {\r\n        setData(e.currentTarget.value)\r\n    }\r\n    const onSubmit=(e)=>{\r\n        if(props.auth.isAuth===false){\r\n            props.setAlert(\"Please Login to add a post\",\"danger\")\r\n        }\r\n        e.preventDefault();\r\n        if(props.auth.isAuth===true){\r\n            const variables = {\r\n                text: formData,\r\n            }\r\n            //console.log(variables)\r\n\r\n            axios.post('/api/posts/setpost', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setData(\"\")\r\n                        getAllPost();\r\n                    } else {\r\n                        alert('Failed to save Post')\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"post-body\">\r\n            <div className=\"post-container\">\r\n                <h1 className=\"Posts\">Posts</h1>\r\n                <b style={{fontSize:\"20px\"}}><i className=\"fas fa-users\"></i> Welcome to the Community</b>\r\n                <div className=\"top-bar-posts\">\r\n                    Post Something...\r\n                 </div>\r\n                <form onSubmit={onSubmit}>\r\n                    <TextArea\r\n                        className=\"form-control\"\r\n                        style={{ width: '100%', borderRadius: '5px',height:'130px' }}\r\n                        onChange={handleChange}\r\n                        value={formData}\r\n                        placeholder=\"Write a post to ask suggestion from other user\"\r\n                    />\r\n                    <br />\r\n                    <button className=\"btn btn-dark submit-btn\" style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</button>\r\n                </form>\r\n                <div className>\r\n                    {\r\n                        Posts.length==0?(<div>Loading</div>):(\r\n                            Posts.map((p,i)=>(\r\n                                <Fragment>\r\n                                    <div key={i} className=\"row posting mt-2\">\r\n                                    <div className=\"col-2 avatar-container\"><i className=\"fas fa-user avatar\" ></i><b className=\"name\">{p.name}</b></div>\r\n                                    <div className=\"col\">\r\n                                        <p>{p.content}</p>\r\n                                        <button type=\"button\" className=\"btn like\"><i className=\"far fa-thumbs-up\"></i></button>\r\n                                        <button type=\"button\" className=\"btn dislike\"><i className=\"far fa-thumbs-down\"></i></button>\r\n                                        <Link to={`/posts/${p._id}`}className=\"btn discussion-btn\">Discussion</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ))\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className=\"main-chatbox-container\">\r\n        //     <h1 className=\"Posts\">Posts</h1>\r\n        //     <b style=\"font-size: 17px;\"><i className=\"fas fa-users\"></i> Welcome to the Community</b>\r\n        //     <div className=\"top-bar-posts\">\r\n        //         Post Something...\r\n        //     </div>\r\n        //     <textarea className=\"form-control\" style=\"resize: none; height: 130px;\" placeholder=\"Create a Post...\"></textarea>\r\n        //     <button className=\"btn btn-dark submit-btn\" >Submit</button>\r\n        //     <div className=\"row post-container\">\r\n        //         <div className=\"col-2 avatar-container\"><i className=\"fas fa-user avatar\" ></i><b className=\"name\">name</b></div>\r\n        //         <div className=\"col\">\r\n        //             <p>taque eveniet! Expedim inventore doloribus natus itaque nobis? Est, velit! Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero, iste nostrum dolor, veniam voluptatibus atque molestiae illo temporibus ea vitae saepe omnis quas esse at perferendis ut nam perspiciatis excepturi?</p>\r\n        //             <button type=\"button\" className=\"btn like\"><i className=\"far fa-thumbs-up\"></i></button>\r\n        //             <button type=\"button\" className=\"btn dislike\"><i className=\"far fa-thumbs-down\"></i></button>\r\n        //             <button className=\"btn discussion-btn\">Discussion</button>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\nPost.propTypes={\r\n    auth:PropTypes.object.isRequired,\r\n    setAlert:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n});\r\nexport default connect(mapStateToProps,{setAlert})(Post)\r\n"]},"metadata":{},"sourceType":"module"}