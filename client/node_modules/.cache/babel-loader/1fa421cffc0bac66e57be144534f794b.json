{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development Codes\\\\Projects\\\\movie_app_original\\\\client\\\\src\\\\components\\\\genreid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY, API_URL, IMAGE_URL } from '../config/default';\nimport GridCard from '../components/sections/gridcard';\nimport { Row, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst GenreId = props => {\n  _s();\n\n  const genreId = props.match.params.genreId;\n  const [currentPage, setPage] = useState(0);\n  const [Movies, setMovies] = useState([]);\n  const URL = `${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}&language=en-US&page=${currentPage + 1}`;\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = () => {\n    fetch(URL).then(response => response.json()).then(response => {\n      const temp = response.results;\n      setMovies([...Movies, ...temp]);\n      setPage(response.page); //console.log(response.results);\n    });\n  };\n\n  const handleClick = () => {\n    fetchMovies();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"85%\",\n        margin: '1rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        children: \"Movies By Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: Movies && Movies.map((movie, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(GridCard, {\n            image: movie.poster_path ? `${IMAGE_URL}w500${movie.poster_path}` : null,\n            movieId: movie.id,\n            movieName: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 31\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Load More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenreId, \"m5D/96g8CYy/N5tuwJWyLE8huX0=\");\n\n_c = GenreId;\nexport default GenreId;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreId\");","map":{"version":3,"sources":["C:/Web Development Codes/Projects/movie_app_original/client/src/components/genreid.js"],"names":["React","useEffect","useState","axios","API_KEY","API_URL","IMAGE_URL","GridCard","Row","Typography","Title","GenreId","props","genreId","match","params","currentPage","setPage","Movies","setMovies","URL","fetchMovies","fetch","then","response","json","temp","results","page","handleClick","width","margin","map","movie","index","poster_path","id","original_title","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,SAAxB,QAAwC,mBAAxC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAAOC,GAAP,EAAWC,UAAX,QAA4B,MAA5B;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAQD,UAAd;;AACA,MAAME,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,OAAO,GAACD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,OAAjC;AACA,QAAM,CAACG,WAAD,EAAaC,OAAb,IAAsBf,QAAQ,CAAC,CAAD,CAApC;AACA,QAAK,CAACgB,MAAD,EAAQC,SAAR,IAAmBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMkB,GAAG,GAAE,GAAEf,OAAQ,0BAAyBD,OAAQ,gBAAeS,OAAQ,wBAAuBG,WAAW,GAAC,CAAE,EAAlH;AACAf,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,WAAW;AACZ,GAFM,EAEL,EAFK,CAAT;;AAGE,QAAMA,WAAW,GAAC,MAAI;AACpBC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMC,QAAQ,IAAE;AAChB,YAAME,IAAI,GAACF,QAAQ,CAACG,OAApB;AACAR,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAW,GAAGQ,IAAd,CAAD,CAAT;AACAT,MAAAA,OAAO,CAACO,QAAQ,CAACI,IAAV,CAAP,CAHgB,CAIhB;AACC,KAPD;AAQD,GATD;;AAUA,QAAMC,WAAW,GAAC,MAAI;AACpBR,IAAAA,WAAW;AACZ,GAFD;;AAGF,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,MAAM,EAAC;AAApB,OAAZ;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,kBACSb,MAAM,IAAIA,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAClB,QAAC,KAAD,CAAO,QAAP;AAAA,iCACI,QAAC,QAAD;AACI,YAAA,KAAK,EAAED,KAAK,CAACE,WAAN,GACF,GAAE7B,SAAU,OAAM2B,KAAK,CAACE,WAAY,EADlC,GAED,IAHV;AAII,YAAA,OAAO,EAAEF,KAAK,CAACG,EAJnB;AAKI,YAAA,SAAS,EAAEH,KAAK,CAACI;AALrB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAqBH,KAArB;AAAA;AAAA;AAAA;AAAA,gBADO;AADnB;AAAA;AAAA;AAAA;AAAA,cAHF,eAgBE;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEV,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA9CD;;GAAMlB,O;;KAAAA,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {API_KEY,API_URL,IMAGE_URL} from '../config/default';\r\nimport GridCard from '../components/sections/gridcard';\r\nimport{Row,Typography} from 'antd';\r\nconst {Title}=Typography;\r\nconst GenreId = (props) => {\r\n    const genreId=props.match.params.genreId;\r\n    const [currentPage,setPage]=useState(0);\r\n    const[Movies,setMovies]=useState([]);\r\n    const URL=`${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}&language=en-US&page=${currentPage+1}`\r\n    useEffect(()=>{\r\n        fetchMovies();\r\n      },[]);\r\n      const fetchMovies=()=>{\r\n        fetch(URL)\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n        const temp=response.results;\r\n        setMovies([...Movies,...temp]);\r\n        setPage(response.page);\r\n        //console.log(response.results);\r\n        })\r\n      }\r\n      const handleClick=()=>{\r\n        fetchMovies();\r\n      }\r\n    return (\r\n        <div className=\"landing1\">\r\n            <div style={{width:\"85%\",margin:'1rem auto'}}>\r\n              <Title level={2}>Movies By Latest</Title>\r\n              <hr/>\r\n              <Row gutter={[16, 16]}>\r\n                      {Movies && Movies.map((movie, index) => (\r\n                          <React.Fragment key={index}>\r\n                              <GridCard\r\n                                  image={movie.poster_path ?\r\n                                      `${IMAGE_URL}w500${movie.poster_path}`\r\n                                      : null}\r\n                                  movieId={movie.id}\r\n                                  movieName={movie.original_title}\r\n                              />\r\n                          </React.Fragment>\r\n                      ))}\r\n                </Row>\r\n              <br />\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <button onClick={handleClick}>Load More</button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreId\r\n"]},"metadata":{},"sourceType":"module"}