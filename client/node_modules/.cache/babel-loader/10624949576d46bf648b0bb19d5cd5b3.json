{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development Codes\\\\Projects\\\\movie_app_original\\\\client\\\\src\\\\components\\\\movie\\\\comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Input, Typography } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setAlert } from '../../action/alert';\nimport SingleComment from './singlecomment';\nimport ReplyComment from './replycomment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\n\nconst Comment = props => {\n  _s();\n\n  //console.log(\"comments ke andar\",props.commentLists);\n  const [Comment, setComment] = useState(\"\");\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    console.log(props);\n\n    if (props.auth.isAuth == false) {\n      props.setAlert(\"Please Login to add a comment\", \"danger\");\n      alert(\"Please Login to add a comment\");\n    }\n\n    e.preventDefault();\n\n    if (props.auth.isAuth === true) {\n      const variables = {\n        content: Comment,\n        writer: props.auth.user._id,\n        postId: props.postId\n      };\n      console.log(variables);\n      axios.post('/api/comment/saveComment', variables).then(response => {\n        if (response.data.success) {\n          setComment(\"\");\n          console.log(\"response\", response.data);\n          props.refreshFunction(response.data.result);\n        } else {\n          alert('Failed to save Comment');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      level: 3,\n      children: [\" Share your opinions about \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: props.movieTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), props.commentLists && props.commentLists.map((comment, index1, index2) => !comment.responseTo && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SingleComment, {\n        comment: comment,\n        postId: props.postId,\n        refreshFunction: props.refreshFunction\n      }, index1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ReplyComment, {\n        CommentLists: props.commentLists,\n        postId: props.postId,\n        parentCommentId: comment._id,\n        refreshFunction: props.refreshFunction\n      }, index2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)), props.commentLists && props.commentLists.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '200px'\n      },\n      children: \"Be the first one who shares your thought about this movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'flex'\n      },\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        style: {\n          width: '100%',\n          borderRadius: '5px'\n        },\n        onChange: handleChange,\n        value: Comment,\n        placeholder: \"write a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: '20%',\n          height: '52px'\n        },\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"dqU/KQQqgBcF/+T/JX3bRSL+BNk=\");\n\n_c = Comment;\nComment.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  auth: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setAlert\n})(Comment);\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["C:/Web Development Codes/Projects/movie_app_original/client/src/components/movie/comment.js"],"names":["React","useState","axios","Button","Input","Typography","connect","PropTypes","setAlert","SingleComment","ReplyComment","TextArea","Title","Comment","props","setComment","handleChange","e","currentTarget","value","onSubmit","console","log","auth","isAuth","alert","preventDefault","variables","content","writer","user","_id","postId","post","then","response","data","success","refreshFunction","result","color","movieTitle","commentLists","map","comment","index1","index2","responseTo","length","display","justifyContent","alignItems","height","width","borderRadius","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useState}  from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Input, Typography, } from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {setAlert} from '../../action/alert';\r\nimport SingleComment from './singlecomment';\r\nimport ReplyComment from './replycomment';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst Comment = (props) => {\r\n    //console.log(\"comments ke andar\",props.commentLists);\r\n    const [Comment, setComment] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setComment(e.currentTarget.value)\r\n    }\r\n   const onSubmit=(e)=>{\r\n       console.log(props);\r\n        if(props.auth.isAuth==false){\r\n            props.setAlert(\"Please Login to add a comment\",\"danger\")\r\n            alert(\"Please Login to add a comment\");\r\n        }\r\n        e.preventDefault();\r\n        if(props.auth.isAuth===true){\r\n            const variables = {\r\n                content: Comment,\r\n                writer: props.auth.user._id,\r\n                postId: props.postId,\r\n            }\r\n            console.log(variables)\r\n\r\n            axios.post('/api/comment/saveComment', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setComment(\"\")\r\n                        console.log(\"response\",response.data);\r\n                        props.refreshFunction(response.data.result)\r\n                    } else {\r\n                        alert('Failed to save Comment')\r\n                    }\r\n                });\r\n        }\r\n   };\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Title level={3} > Share your opinions about <span style={{color:\"red\"}}>{props.movieTitle}</span></Title>\r\n            <hr />\r\n            {props.commentLists && props.commentLists.map((comment, index1,index2) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment key={index1} comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment key={index2} CommentLists={props.commentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                    </React.Fragment>\r\n                )\r\n            ))}\r\n            { props.commentLists && props.commentLists.length === 0 &&\r\n                <div style={{ display: 'flex', justifyContent:'center', alignItems:'center', height:'200px'}} >\r\n                    Be the first one who shares your thought about this movie\r\n                </div>\r\n            }\r\n            <br/>\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleChange}\r\n                    value={Comment}\r\n                    placeholder=\"write a comment\"\r\n                />\r\n                <br />\r\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nComment.propTypes={\r\n    setAlert:PropTypes.func.isRequired,\r\n    auth:PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert})(Comment);\r\n"]},"metadata":{},"sourceType":"module"}