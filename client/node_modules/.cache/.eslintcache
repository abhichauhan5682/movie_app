[{"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\index.js":"1","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reportWebVitals.js":"2","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\App.js":"3","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\store.js":"4","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\alert.js":"5","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\navbar.js":"6","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\genreid.js":"7","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\landing.js":"8","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\utils\\setauthtoken.js":"9","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\post\\post.js":"10","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\post\\singlepost.js":"11","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\action\\auth.js":"12","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\moviedetail.js":"13","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\auth\\login.js":"14","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\auth\\register.js":"15","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\favouritepage\\favouritepage.js":"16","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\privaterouter\\privateroute.js":"17","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\Genre.js":"18","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\action\\alert.js":"19","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\comment.js":"20","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\action\\types.js":"21","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\movieinfo.js":"22","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\likedislike.js":"23","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\favouritebutton.js":"24","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\sections\\gridcard.js":"25","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\sections\\mainimage.js":"26","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\config\\default.js":"27","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reducers\\index.js":"28","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\replycomment.js":"29","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\singlecomment.js":"30","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reducers\\auth.js":"31","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reducers\\alert.js":"32"},{"size":517,"mtime":1625063574674,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1625063574682,"results":"35","hashOfConfig":"34"},{"size":1904,"mtime":1625063574658,"results":"36","hashOfConfig":"34"},{"size":390,"mtime":1625063574682,"results":"37","hashOfConfig":"34"},{"size":503,"mtime":1625063574658,"results":"38","hashOfConfig":"34"},{"size":1713,"mtime":1625063574666,"results":"39","hashOfConfig":"34"},{"size":2054,"mtime":1625063574658,"results":"40","hashOfConfig":"34"},{"size":2234,"mtime":1625063574666,"results":"41","hashOfConfig":"34"},{"size":223,"mtime":1625063574682,"results":"42","hashOfConfig":"34"},{"size":5388,"mtime":1625063574674,"results":"43","hashOfConfig":"34"},{"size":2103,"mtime":1625063574674,"results":"44","hashOfConfig":"34"},{"size":2221,"mtime":1625063574658,"results":"45","hashOfConfig":"34"},{"size":5640,"mtime":1625063574666,"results":"46","hashOfConfig":"34"},{"size":1980,"mtime":1625063574658,"results":"47","hashOfConfig":"34"},{"size":2619,"mtime":1625063574658,"results":"48","hashOfConfig":"34"},{"size":3956,"mtime":1625063574658,"results":"49","hashOfConfig":"34"},{"size":570,"mtime":1625063574674,"results":"50","hashOfConfig":"34"},{"size":1094,"mtime":1625063574658,"results":"51","hashOfConfig":"34"},{"size":325,"mtime":1625063574658,"results":"52","hashOfConfig":"34"},{"size":3377,"mtime":1625063574666,"results":"53","hashOfConfig":"34"},{"size":757,"mtime":1625063574658,"results":"54","hashOfConfig":"34"},{"size":971,"mtime":1625063574666,"results":"55","hashOfConfig":"34"},{"size":4804,"mtime":1625063574666,"results":"56","hashOfConfig":"34"},{"size":2093,"mtime":1625063574666,"results":"57","hashOfConfig":"34"},{"size":1176,"mtime":1625063574674,"results":"58","hashOfConfig":"34"},{"size":543,"mtime":1625063574674,"results":"59","hashOfConfig":"34"},{"size":165,"mtime":1625063574674,"results":"60","hashOfConfig":"34"},{"size":161,"mtime":1625063574682,"results":"61","hashOfConfig":"34"},{"size":1767,"mtime":1625063574666,"results":"62","hashOfConfig":"34"},{"size":3138,"mtime":1625063574666,"results":"63","hashOfConfig":"34"},{"size":1384,"mtime":1625063574682,"results":"64","hashOfConfig":"34"},{"size":385,"mtime":1625063574682,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ik9l0",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\index.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reportWebVitals.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\App.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\store.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\alert.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\navbar.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\genreid.js",["144","145"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {API_KEY,API_URL,IMAGE_URL} from '../config/default';\r\nimport GridCard from '../components/sections/gridcard';\r\nimport{Row,Typography} from 'antd';\r\nconst {Title}=Typography;\r\nconst GenreId = (props) => {\r\n    const genreId=props.match.params.genreId;\r\n    const [currentPage,setPage]=useState(0);\r\n    const[Movies,setMovies]=useState([]);\r\n    const URL=`${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}&language=en-US&page=${currentPage+1}`\r\n    useEffect(()=>{\r\n        fetchMovies();\r\n      },[]);\r\n      const fetchMovies=()=>{\r\n        fetch(URL)\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n        const temp=response.results;\r\n        setMovies([...Movies,...temp]);\r\n        setPage(response.page);\r\n        //console.log(response.results);\r\n        })\r\n      }\r\n      const handleClick=()=>{\r\n        fetchMovies();\r\n      }\r\n    return (\r\n        <div className=\"landing1\">\r\n            <div style={{width:\"85%\",margin:'1rem auto'}}>\r\n              <Title level={2}>Movies By Latest</Title>\r\n              <hr/>\r\n              <Row gutter={[16, 16]}>\r\n                      {Movies && Movies.map((movie, index) => (\r\n                          <React.Fragment key={index}>\r\n                              <GridCard\r\n                                  image={movie.poster_path ?\r\n                                      `${IMAGE_URL}w500${movie.poster_path}`\r\n                                      : null}\r\n                                  movieId={movie.id}\r\n                                  movieName={movie.original_title}\r\n                              />\r\n                          </React.Fragment>\r\n                      ))}\r\n                </Row>\r\n              <br />\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <button onClick={handleClick}>Load More</button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreId\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\landing.js",["146"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Row,Carousel} from 'antd';\r\n\r\nimport {API_URL,API_KEY,IMAGE_URL} from '../config/default';\r\nimport MainImage from './sections/mainimage';\r\nimport GridCard from './sections/gridcard';\r\n\r\nconst {Title} =Typography\r\n\r\nconst Landing = (props) => {\r\n  const[Movies,setMovies]=useState([]);\r\n  const[currentPage,setPage]=useState(0);\r\n  useEffect(()=>{\r\n    //console.log(`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`);\r\n    fetchMovies();\r\n  },[]);\r\n  const fetchMovies=()=>{\r\n    fetch(`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage+1}`)\r\n    .then(response=>response.json())\r\n    .then(response=>{\r\n    const temp=response.results;\r\n    setMovies([...Movies,...temp]);\r\n    setPage(response.page);\r\n    //console.log(response.results);\r\n    })\r\n  }\r\n  const handleClick=()=>{\r\n    fetchMovies();\r\n  }\r\n    return (\r\n      <div className='landing1'>\r\n        <Carousel autoplay >\r\n        { Movies && Movies.map((movie,index)=>\r\n          <MainImage  image={`${IMAGE_URL}w1280${movie.backdrop_path}`} title={movie.original_title} text={movie.overview} />\r\n        )\r\n          \r\n        }\r\n        </Carousel>\r\n          <div style={{width:\"85%\",margin:'1rem auto'}}>\r\n              \r\n            <Title level={2}>Movies By Latest</Title>\r\n            <hr/>\r\n            <Row gutter={[16, 16]}>\r\n                    {Movies && Movies.map((movie, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <GridCard\r\n                                image={movie.poster_path ?\r\n                                    `${IMAGE_URL}w500${movie.poster_path}`\r\n                                    : null}\r\n                                movieId={movie.id}\r\n                                movieName={movie.original_title}\r\n                            />\r\n                        </React.Fragment>\r\n                    ))}\r\n              </Row>\r\n            <br />\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button onClick={handleClick}>Load More</button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Landing;","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\utils\\setauthtoken.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\post\\post.js",["147","148","149"],"import React,{useState,useEffect,Fragment} from 'react'\r\nimport { Button, Input, Typography, } from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {setAlert} from '../../action/alert';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst Post = (props) => {\r\n    const [formData,setData]=useState(\"\");\r\n    const [Posts,setPosts]=useState(\"\");\r\n    useEffect(()=>{\r\n        getAllPost();\r\n    },[])\r\n    const getAllPost=async()=>{\r\n        const res=await axios.get('/api/posts/getposts');\r\n        console.log(res.data);\r\n        if(res.data.success) setPosts(res.data.post);\r\n    }\r\n    const handleChange = (e) => {\r\n        setData(e.currentTarget.value)\r\n    }\r\n    const onSubmit=(e)=>{\r\n        if(props.auth.isAuth===false){\r\n            props.setAlert(\"Please Login to add a post\",\"danger\")\r\n        }\r\n        e.preventDefault();\r\n        if(props.auth.isAuth===true){\r\n            const variables = {\r\n                text: formData,\r\n            }\r\n            //console.log(variables)\r\n\r\n            axios.post('/api/posts/setpost', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setData(\"\")\r\n                        getAllPost();\r\n                    } else {\r\n                        alert('Failed to save Post')\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"post-body\">\r\n            <div className=\"post-container\">\r\n                <h1 className=\"Posts\">Posts</h1>\r\n                <b style={{fontSize:\"20px\"}}><i className=\"fas fa-users\"></i> Welcome to the Community</b>\r\n                <div className=\"top-bar-posts\">\r\n                    Post Something...\r\n                 </div>\r\n                <form onSubmit={onSubmit}>\r\n                    <TextArea\r\n                        className=\"form-control\"\r\n                        style={{ width: '100%', borderRadius: '5px',height:'130px' }}\r\n                        onChange={handleChange}\r\n                        value={formData}\r\n                        placeholder=\"Write a post to ask suggestion from other user\"\r\n                    />\r\n                    <br />\r\n                    <button className=\"btn btn-dark submit-btn\" style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</button>\r\n                </form>\r\n                <div className>\r\n                    {\r\n                        Posts.length==0?(<div>Loading</div>):(\r\n                            Posts.map((p,i)=>(\r\n                                <Fragment>\r\n                                    <div key={i} className=\"row posting mt-2\">\r\n                                    <div className=\"col-2 avatar-container\"><i className=\"fas fa-user avatar\" ></i><b className=\"name\">{p.name}</b></div>\r\n                                    <div className=\"col\">\r\n                                        <p>{p.content}</p>\r\n                                        <button type=\"button\" className=\"btn like\"><i className=\"far fa-thumbs-up\"></i></button>\r\n                                        <button type=\"button\" className=\"btn dislike\"><i className=\"far fa-thumbs-down\"></i></button>\r\n                                        <Link to={`/posts/${p._id}`}className=\"btn discussion-btn\">Discussion</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ))\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className=\"main-chatbox-container\">\r\n        //     <h1 className=\"Posts\">Posts</h1>\r\n        //     <b style=\"font-size: 17px;\"><i className=\"fas fa-users\"></i> Welcome to the Community</b>\r\n        //     <div className=\"top-bar-posts\">\r\n        //         Post Something...\r\n        //     </div>\r\n        //     <textarea className=\"form-control\" style=\"resize: none; height: 130px;\" placeholder=\"Create a Post...\"></textarea>\r\n        //     <button className=\"btn btn-dark submit-btn\" >Submit</button>\r\n        //     <div className=\"row post-container\">\r\n        //         <div className=\"col-2 avatar-container\"><i className=\"fas fa-user avatar\" ></i><b className=\"name\">name</b></div>\r\n        //         <div className=\"col\">\r\n        //             <p>taque eveniet! Expedim inventore doloribus natus itaque nobis? Est, velit! Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero, iste nostrum dolor, veniam voluptatibus atque molestiae illo temporibus ea vitae saepe omnis quas esse at perferendis ut nam perspiciatis excepturi?</p>\r\n        //             <button type=\"button\" className=\"btn like\"><i className=\"far fa-thumbs-up\"></i></button>\r\n        //             <button type=\"button\" className=\"btn dislike\"><i className=\"far fa-thumbs-down\"></i></button>\r\n        //             <button className=\"btn discussion-btn\">Discussion</button>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\nPost.propTypes={\r\n    auth:PropTypes.object.isRequired,\r\n    setAlert:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n});\r\nexport default connect(mapStateToProps,{setAlert})(Post)\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\post\\singlepost.js",["150","151","152","153"],"import React,{useState,useEffect,Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {setAlert} from '../../action/alert';\r\nimport Comment from '../movie/comment';\r\nimport LikeDislike from '../movie/likedislike';\r\n\r\nconst SinglePost = props => {\r\n    const postid=props.match.params.postid;\r\n    const [data,setdata]=useState(\"\");\r\n    const [author,setAuthor]=useState(\"\");\r\n    const [CommentLists, setCommentLists] = useState([]);\r\n    const movieVariable = {\r\n        movieId: postid\r\n    }\r\n    useEffect(async()=>{\r\n        const res=await axios.get(`/api/posts/${postid}`);\r\n        console.log(res.data);\r\n        if(res.data.success){\r\n            setdata(res.data.post.content);\r\n            setAuthor(res.data.post.name);\r\n        }\r\n        axios.post('/api/comment/getComments', movieVariable)\r\n        .then(response => {\r\n            //console.log(response)\r\n            if (response.data.success) {\r\n                //console.log('response.data.comments', response.data)\r\n                setCommentLists(response.data.comments)\r\n            } else {\r\n                alert('Failed to get comments Info')\r\n            }\r\n        })\r\n    },[postid]);\r\n    const updateComment = async (newComment) => {\r\n        await setCommentLists(CommentLists.concat(newComment));\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                data===null?<h1>Loading</h1>:<h1>{data}</h1>\r\n            }\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <LikeDislike movie  userId={localStorage.getItem('userId')} movieId={postid} />\r\n            </div>\r\n            {/* Comments */}\r\n            <Comment postId={postid} commentLists={CommentLists} refreshFunction={updateComment} movieTitle=\"this post\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nSinglePost.propTypes = {\r\n    auth:PropTypes.object.isRequired,\r\n    setAlert:PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{setAlert})(SinglePost);\r\n\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\action\\auth.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\moviedetail.js",["154","155","156"],"import React, { useEffect, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport {API_URL,API_KEY,IMAGE_URL} from '../../config/default';\r\nimport MainImage from '../sections/mainimage';\r\nimport MovieInfo from './movieinfo';\r\nimport {Button,Row} from 'antd';\r\nimport { Fragment } from 'react';\r\nimport GridCard from '../sections/gridcard';\r\nimport FavouriteButton from './favouritebutton';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Comment from './comment';\r\nimport axios from 'axios';\r\nimport LikeDislike from './likedislike';\r\n\r\n\r\nconst MovieDetail = (props) => {\r\n    //console.log(props);\r\n    const movieId=props.match.params.movieId;\r\n    const [Movie,setMovie]=useState([]);\r\n    const [Crew,setCrew]=useState([]);\r\n    const [ActorView,setActorView]=useState(false);\r\n    const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n    const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n    const [CommentLists, setCommentLists] = useState([])\r\n    const movieVariable = {\r\n        movieId: movieId\r\n    }\r\n    let userId=null;\r\n    if(props.isAuth===true && props.user!==null){\r\n        userId=props.user._id;\r\n        console.log(\"heloo user\");\r\n    }\r\n    useEffect(()=>{\r\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n        fetchDetailInfo(endpointForMovieInfo)\r\n\r\n        axios.post('/api/comment/getComments', movieVariable)\r\n        .then(response => {\r\n            //console.log(response)\r\n            if (response.data.success) {\r\n                //console.log('response.data.comments', response.data.comments)\r\n                setCommentLists(response.data.comments)\r\n            } else {\r\n                alert('Failed to get comments Info')\r\n            }\r\n        })\r\n\r\n    },[]);\r\n    const fetchDetailInfo = (endpoint) => {\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                setMovie(result)\r\n                setLoadingForMovie(false)\r\n\r\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n                fetch(endpointForCasts)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        setCrew(result.cast)\r\n                    })\r\n\r\n                setLoadingForCasts(false)\r\n            })\r\n            .catch(error => console.error('Error:', error)\r\n            )\r\n    }\r\n    const updateComment = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !LoadingForMovie &&\r\n                <MainImage\r\n                    image={`${IMAGE_URL}w1280${Movie.backdrop_path}`}\r\n                    title={Movie.original_title}\r\n                    text={Movie.overview}\r\n\r\n                />\r\n            }\r\n            <div style={{ width: '85%', margin: '1rem auto' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                   {props.user!==null&&props.auth.isAuth? \r\n                        <FavouriteButton\r\n                            userFrom={props.user._id}\r\n                            movieId={movieId}\r\n                            movieInfo={Movie}\r\n                        />\r\n                        :\r\n                        <Button>\r\n                            <Link to=\"/login\">\r\n                                Add To Favourite\r\n                            </Link>\r\n                        </Button>\r\n                    }\r\n                </div>\r\n\r\n                {   \r\n                    !LoadingForMovie&&\r\n                    <MovieInfo movie={Movie}/>\r\n                }\r\n                <br/>\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                   <Button onClick={()=>setActorView(!ActorView)}>Toggle Actor View</Button>\r\n                </div>\r\n                <br/>\r\n                {\r\n                    ActorView &&\r\n                    <Row gutter={[16,16]}>\r\n                        {\r\n                            !LoadingForCasts&&\r\n                            Crew.map((crew,index)=>(\r\n                                <Fragment key={index}>\r\n                                    {\r\n                                        crew.profile_path&& \r\n                                        <GridCard\r\n                                            actor \r\n                                            image={crew.profile_path} \r\n                                            characterName={crew.name}\r\n                                        />\r\n                                    }\r\n                                </Fragment>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                }\r\n\r\n                {/* likes & dislikes */}\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <LikeDislike movie  userId={localStorage.getItem('userId')} movieId={movieId} />\r\n                </div>\r\n\r\n                {/* Comments */}\r\n                <Comment movieTitle={Movie.original_title}  commentLists={CommentLists} postId={movieId} refreshFunction={updateComment}/>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nMovieDetail.propTypes={\r\n    isAuth:PropTypes.bool.isRequired,\r\n    user:PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    isAuth:state.auth.isAuth,\r\n    user:state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(MovieDetail);\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\auth\\login.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\auth\\register.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\favouritepage\\favouritepage.js",["157","158","159"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {IMAGE_URL} from '../../config/default';\r\nimport { Typography, Popover, Button } from 'antd';\r\nimport {setAlert} from '../../action/alert';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst FavouritePage = (props) => {\r\n    const [favMovies,setfavMovies]=useState([]);\r\n    const[loading,setLoading]=useState(true);\r\n    const variable={\r\n        userFrom:props.user._id\r\n    }\r\n    useEffect(()=>{\r\n        if(props.isAuth){\r\n            fetchFavoredMovie();\r\n        } \r\n    },[]);\r\n    const fetchFavoredMovie=async ()=>{\r\n        const res=await axios.post('/api/favourite/getFavouredMovie',variable);\r\n            // .then(response=>{\r\n            //     if(response.data.success){\r\n            //         console.log(response.data.favorites);\r\n            //         setfavMovies(response.data.favorites);\r\n            //         setLoading(false);\r\n            //     }else{\r\n            //         console.log(\"error\");\r\n            //     }\r\n            // })\r\n        if(res.data.success){\r\n            console.log(res.data.favorites);\r\n            setfavMovies(res.data.favorites);\r\n            setLoading(false);\r\n        }else{\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    const onClickDelete=async (movieId, userFrom)=>{\r\n        const variables = {\r\n            movieId: movieId,\r\n            userFrom: userFrom,\r\n        }\r\n\r\n        // axios.post('/api/favourite/removeFromFavourite', variables)\r\n        //     .then(response => {\r\n        //         if (response.data.success) {\r\n        //             console.log(\"remove\");\r\n        //             fetchFavoredMovie()\r\n        //         } else {\r\n        //             alert('Failed to Remove From Favorite')\r\n        //         }\r\n        //     })\r\n        const res=await axios.post('/api/favourite/removeFromFavourite',variables);\r\n        if(res.data.success){\r\n            props.setAlert(\"Successfully Removed from your Favourite List\",\"success\");\r\n            console.log(\"remove\");\r\n            fetchFavoredMovie();\r\n        }else{\r\n            props.setAlert(\"Error take place during Removal\",\"danger\");\r\n        }\r\n    }\r\n    const renderCards = favMovies.map((favorite, index) => {\r\n\r\n\r\n        const content = (\r\n            <div>\r\n                {favorite.movieImage ?\r\n                    <img src={`${IMAGE_URL}w500${favorite.movieImage}`} />\r\n                    : \"no image\"}\r\n            </div>\r\n        );\r\n\r\n        return <tr key={index}>\r\n\r\n            <Popover content={content} title={`${favorite.movieTitle}`}>\r\n                <td>{favorite.movieTitle}</td>\r\n            </Popover>\r\n\r\n            <td>{favorite.movieRunTime} mins</td>\r\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}> Remove </button></td>\r\n        </tr>\r\n    })\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Favorite Movies By Me </Title>\r\n            <hr />\r\n            {\r\n                !loading &&\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Movie Title</th>\r\n                            <th>Movie RunTime</th>\r\n                            <td>Remove from favorites</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            renderCards\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nFavouritePage.propTypes={\r\nsetAlert:PropTypes.func.isRequired,\r\nisAuth:PropTypes.bool.isRequired,\r\nuser:PropTypes.object,\r\n}\r\nconst mapStateToProps=state=>({\r\nisAuth:state.auth.isAuth,\r\nuser:state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert})(FavouritePage);\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\privaterouter\\privateroute.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\Genre.js",["160","161","162"],"import React,{useEffect,useState}from 'react'\r\nimport { Menu, Dropdown } from 'antd';\r\nimport axios from 'axios';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport {API_KEY,API_URL} from '../config/default';\r\n\r\n\r\nconst Helper = (props) => {\r\n    const [Genre,setGenre]=useState([]);\r\n    useEffect(()=>{\r\n        fetch(`${API_URL}genre/movie/list?api_key=${API_KEY}`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(res);\r\n            setGenre(res.genres);\r\n        })\r\n    },[])\r\n    const menu=(\r\n        <Menu>\r\n            {\r\n                Genre && Genre.map((g,i)=>\r\n                    <Menu.Item key={i} >\r\n                        <a href={`/genre/${g.id}`}>{g.name}</a>\r\n                    </Menu.Item>\r\n                )\r\n            }\r\n        </Menu>\r\n    )\r\n    return (\r\n        <Dropdown overlay={menu}>\r\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n            Genre <DownOutlined />\r\n            </a>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nexport default Helper;\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\action\\alert.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\comment.js",["163"],"import React,{useState}  from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Input, Typography, } from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {setAlert} from '../../action/alert';\r\nimport SingleComment from './singlecomment';\r\nimport ReplyComment from './replycomment';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst Comment = (props) => {\r\n    //console.log(\"comments ke andar\",props.commentLists);\r\n    const [Comment, setComment] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setComment(e.currentTarget.value)\r\n    }\r\n   const onSubmit=(e)=>{\r\n       console.log(props);\r\n        if(props.auth.isAuth==false){\r\n            props.setAlert(\"Please Login to add a comment\",\"danger\")\r\n            alert(\"Please Login to add a comment\");\r\n        }\r\n        e.preventDefault();\r\n        if(props.auth.isAuth===true){\r\n            const variables = {\r\n                content: Comment,\r\n                writer: props.auth.user._id,\r\n                postId: props.postId,\r\n            }\r\n            console.log(variables)\r\n\r\n            axios.post('/api/comment/saveComment', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setComment(\"\")\r\n                        console.log(\"response\",response.data);\r\n                        props.refreshFunction(response.data.result)\r\n                    } else {\r\n                        alert('Failed to save Comment')\r\n                    }\r\n                });\r\n        }\r\n   };\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Title level={3} > Share your opinions about <span style={{color:\"red\"}}>{props.movieTitle}</span></Title>\r\n            <hr />\r\n            {props.commentLists && props.commentLists.map((comment, index1,index2) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment key={index1} comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment key={index2} CommentLists={props.commentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                    </React.Fragment>\r\n                )\r\n            ))}\r\n            { props.commentLists && props.commentLists.length === 0 &&\r\n                <div style={{ display: 'flex', justifyContent:'center', alignItems:'center', height:'200px'}} >\r\n                    Be the first one who shares your thought about this movie\r\n                </div>\r\n            }\r\n            <br/>\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleChange}\r\n                    value={Comment}\r\n                    placeholder=\"write a comment\"\r\n                />\r\n                <br />\r\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nComment.propTypes={\r\n    setAlert:PropTypes.func.isRequired,\r\n    auth:PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert})(Comment);\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\action\\types.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\movieinfo.js",["164"],"import React from 'react'\r\nimport { Descriptions, Badge } from 'antd';\r\nfunction MovieInfo(props) {\r\n\r\n    const { movie } = props;\r\n    \r\n    return (\r\n        <Descriptions title=\"Movie Info\"  bordered>\r\n        <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\r\n        <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\r\n        <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\r\n        <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\r\n        <Descriptions.Item label=\"vote_average\" span={2}>\r\n        {movie.vote_average}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\r\n        <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\r\n        <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\r\n      </Descriptions>\r\n    )\r\n}\r\n\r\nexport default MovieInfo\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\likedislike.js",["165","166","167","168","169","170","171"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Tooltip } from 'antd';\r\nimport {LikeOutlined,DislikeOutlined,LikeFilled,DislikeFilled} from '@ant-design/icons';\r\n\r\n\r\nconst LikeDislike = props => {\r\n    const[Likes,setLikes]=useState(0);\r\n    const[Dislikes,setDislikes]=useState(0);\r\n    const [LikeAction, setLikeAction] = useState(false);\r\n    const [DislikeAction, setDislikeAction] = useState(false);\r\n    let variable={};\r\n    \r\n    if(props.movie){\r\n        variable={movieId:props.movieId,userId:props.userId}\r\n    }else{\r\n        variable={commentId:props.commentId,userId:props.userId}\r\n    }\r\n    useEffect(async ()=>{\r\n        const res=await axios.post('/api/like/getlikes',variable);\r\n        if(res.data.success){\r\n            setLikes(res.data.likes.length);\r\n            res.data.likes.map(like=>{\r\n                if(like.userId === props.userId){\r\n                    setLikeAction(true);\r\n                    console.log(\"user has liked it\");\r\n                }\r\n            })\r\n        }else{\r\n            console.log(res.data.err);\r\n        }\r\n        \r\n        const res1=await axios.post('/api/like/getdislikes',variable);\r\n        if(res1.data.success){\r\n            setDislikes(res1.data.dislikes.length);\r\n            res1.data.dislikes.map((dislike)=>{\r\n                if(dislike.userId=== props.userId){\r\n                    console.log(\"disliked\");\r\n                    setDislikeAction(true);\r\n                }\r\n            })\r\n        }else{\r\n            console.log(res.data.err);\r\n        }\r\n\r\n\r\n    },[]);\r\n    const handleClick=async ()=>{\r\n       if(props.auth.isAuth===false||props.userId===null) alert(\"please login to like this post\");\r\n       if(props.auth.isAuth){\r\n            if(LikeAction===false){\r\n                const res=await axios.post('/api/like/uplike',variable);\r\n                if(res.data.success===true){\r\n                    setLikes(Likes+1);\r\n                    setLikeAction(true);\r\n                    if(DislikeAction==true){\r\n                        setDislikeAction(false);\r\n                        setDislikes(Dislikes-1);\r\n                    }\r\n                }else{\r\n                    alert(\"failed to like\");\r\n                }\r\n            }else{\r\n                const res=await axios.post('/api/like/unlike',variable)\r\n                if(res.data.success===true){\r\n                    setLikes(Likes-1);\r\n                    setLikeAction(false);\r\n                }else{\r\n                    alert(\"Failed to decrease the like\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleDislikeClik=async ()=>{\r\n        if(props.auth.isAuth===false||props.userId===null) alert(\"please login to like this post\");\r\n        if(props.auth.isAuth){\r\n            if(DislikeAction===false){\r\n                const res=await axios.post('/api/like/updislike',variable);\r\n                if(res.data.success===true){\r\n                    setDislikes(Dislikes+1);\r\n                    setDislikeAction(true);\r\n                    if(LikeAction===true){\r\n                        setLikes(Likes-1);\r\n                        setLikeAction(false);\r\n                    }\r\n                }else{\r\n                    alert(\"failed to dislike\")\r\n                }\r\n            }else{\r\n                const res=await axios.post('/api/like/undislike',variable);\r\n                if(res.data.success===true){\r\n                    setDislikeAction(false);\r\n                    setDislikes(Dislikes-1);\r\n                }else{\r\n                    alert(\"failed to decrease the dislike\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div style={{float:\"left\",display:\"flex\"}}>\r\n            \r\n            <span key='comment-basic-like'>\r\n            \r\n                <div onClick={handleClick}>\r\n                    <Tooltip title='Like'>\r\n                        {LikeAction==false ?<LikeOutlined />:<LikeFilled />}\r\n                    </Tooltip>\r\n                    <span style={{paddingLeft:\"2px\",cursor:'auto'}}>{Likes}</span>\r\n                </div>\r\n            </span>\r\n            <span key=\"comment-basic-dislike\">\r\n                <div onClick={handleDislikeClik}>\r\n                    <Tooltip title='Dislike'>\r\n                        {DislikeAction==false?<DislikeOutlined />:<DislikeFilled />}\r\n                    </Tooltip>\r\n                    <span style={{paddingLeft:\"2px\",cursor:'auto'}}>{Dislikes}</span>\r\n                </div>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nLikeDislike.propTypes = {\r\nauth:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\nauth:state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(LikeDislike);\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\favouritebutton.js",["172","173"],"import React, { useEffect, useState } from 'react'\r\nimport {Button} from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst FavouriteButton = (props) => {\r\n    console.log(props);\r\n    const variable={\r\n        userFrom:props.userFrom,\r\n        movieId:props.movieId,\r\n        movieTitle:props.movieInfo.original_title,\r\n        movieImage:props.movieInfo.backdrop_path,\r\n        movieRunTime:props.movieInfo.runtime\r\n    }\r\n    const[favouriteNumber,setNumber]=useState(0);\r\n    const[favourited,setFavourited]=useState(false);\r\n    useEffect(async ()=>{\r\n\r\n        const res=await axios.post('/api/favourite/favouriteNumber',variable);\r\n        if(res.data.success){\r\n            console.log(res);\r\n            setNumber(res.data.favouriteNumber);\r\n        }\r\n        const res1= await axios.post('/api/favourite/favourited',variable);\r\n        if(res1.data.success){\r\n            console.log(res1);\r\n            setFavourited(res1.data.favourited);\r\n        }\r\n\r\n    },[]);\r\n    const handelFavourite=async ()=>{\r\n        if(favourited){\r\n            axios.post('/api/favourite/removeFromFavourite', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setNumber(favouriteNumber - 1)\r\n                        setFavourited(!favourited)\r\n                    } else {\r\n                        alert('Failed to Remove From Favorite')\r\n                    }\r\n                })\r\n        }else{\r\n            axios.post('/api/favourite/addToFavourite', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setNumber(favouriteNumber + 1)\r\n                        setFavourited(!favourited)\r\n                    } else {\r\n                        alert('Failed to Add To Favourite')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Button onClick={handelFavourite}> {favourited?\"Remove From Favourite\":\"Add To Favourite\"} {favouriteNumber}</Button>\r\n        </div>\r\n     )\r\n}\r\n\r\nexport default FavouriteButton;\r\n","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\sections\\gridcard.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\sections\\mainimage.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\config\\default.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reducers\\index.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\replycomment.js",["174"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './singlecomment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber);\r\n    }, [props.CommentLists, props.parentCommentId]);\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n    props.CommentLists.map((comment, index) => (\r\n        <React.Fragment>\r\n            {comment.responseTo === parentCommentId &&\r\n                <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                    <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ReplyComment;","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\components\\movie\\singlecomment.js",[],"C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reducers\\auth.js",["175"],"import { \r\n    REGISTER_SUCCESS, \r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    DELETE_ACCOUNT,\r\n} from '../action/types';\r\n\r\nconst initialState={\r\n    token:localStorage.getItem('token'),\r\n    isAuth:false,\r\n    isLoading:false,\r\n    user:null\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    const {type,payload}=action;\r\n    switch(type){\r\n        case USER_LOADED:\r\n            localStorage.setItem('userId',payload._id);\r\n            return {\r\n                ...state,\r\n                isAuth :true,\r\n                isLoading:false,\r\n                user:payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuth:true,\r\n                isLoading:false\r\n            };\r\n        case LOGOUT:\r\n        case LOGIN_FAIL:\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case DELETE_ACCOUNT:\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('userId');\r\n            return{\r\n                ...state,\r\n                isAuth:false,\r\n                isLoading:false,\r\n                token:null\r\n            }\r\n        default:\r\n            return state;        \r\n    }\r\n}","C:\\Web Development Codes\\Projects\\movie_app_original\\client\\src\\reducers\\alert.js",["176"],"import { SET_ALERT,REMOVE_ALERT } from \"../action/types\";\r\nconst initialstate=[];\r\n\r\nexport default function(state=initialstate,action){\r\n    switch(action.type){\r\n        case SET_ALERT:\r\n          return [...state,action.payload] ;\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=>alert.id!==action.payload); \r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":14,"column":9,"nodeType":"183","endLine":14,"endColumn":11,"suggestions":"184"},{"ruleId":"181","severity":1,"message":"182","line":16,"column":5,"nodeType":"183","endLine":16,"endColumn":7,"suggestions":"185"},{"ruleId":"177","severity":1,"message":"186","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"187","line":10,"column":9,"nodeType":"179","messageId":"180","endLine":10,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":69,"column":37,"nodeType":"190","messageId":"191","endLine":69,"endColumn":39},{"ruleId":"177","severity":1,"message":"192","line":1,"column":34,"nodeType":"179","messageId":"180","endLine":1,"endColumn":42},{"ruleId":"177","severity":1,"message":"193","line":12,"column":12,"nodeType":"179","messageId":"180","endLine":12,"endColumn":18},{"ruleId":"181","severity":1,"message":"194","line":17,"column":15,"nodeType":"195","endLine":34,"endColumn":6},{"ruleId":"181","severity":1,"message":"196","line":34,"column":7,"nodeType":"183","endLine":34,"endColumn":15,"suggestions":"197"},{"ruleId":"177","severity":1,"message":"198","line":11,"column":10,"nodeType":"179","messageId":"180","endLine":11,"endColumn":18},{"ruleId":"177","severity":1,"message":"199","line":32,"column":9,"nodeType":"179","messageId":"180","endLine":32,"endColumn":15},{"ruleId":"181","severity":1,"message":"200","line":50,"column":7,"nodeType":"183","endLine":50,"endColumn":9,"suggestions":"201"},{"ruleId":"177","severity":1,"message":"186","line":6,"column":31,"nodeType":"179","messageId":"180","endLine":6,"endColumn":37},{"ruleId":"181","severity":1,"message":"202","line":21,"column":7,"nodeType":"183","endLine":21,"endColumn":9,"suggestions":"203"},{"ruleId":"204","severity":1,"message":"205","line":71,"column":21,"nodeType":"206","endLine":71,"endColumn":75},{"ruleId":"177","severity":1,"message":"178","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"207","line":5,"column":9,"nodeType":"179","messageId":"180","endLine":5,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":32,"column":13,"nodeType":"206","endLine":32,"endColumn":80},{"ruleId":"188","severity":1,"message":"189","line":22,"column":29,"nodeType":"190","messageId":"191","endLine":22,"endColumn":31},{"ruleId":"177","severity":1,"message":"210","line":2,"column":24,"nodeType":"179","messageId":"180","endLine":2,"endColumn":29},{"ruleId":"181","severity":1,"message":"194","line":21,"column":15,"nodeType":"195","endLine":49,"endColumn":6},{"ruleId":"211","severity":1,"message":"212","line":25,"column":36,"nodeType":"195","messageId":"213","endLine":25,"endColumn":38},{"ruleId":"211","severity":1,"message":"212","line":38,"column":45,"nodeType":"195","messageId":"213","endLine":38,"endColumn":47},{"ruleId":"181","severity":1,"message":"214","line":49,"column":7,"nodeType":"183","endLine":49,"endColumn":9,"suggestions":"215"},{"ruleId":"188","severity":1,"message":"189","line":58,"column":37,"nodeType":"190","messageId":"191","endLine":58,"endColumn":39},{"ruleId":"188","severity":1,"message":"189","line":109,"column":36,"nodeType":"190","messageId":"191","endLine":109,"endColumn":38},{"ruleId":"188","severity":1,"message":"189","line":117,"column":39,"nodeType":"190","messageId":"191","endLine":117,"endColumn":41},{"ruleId":"181","severity":1,"message":"194","line":16,"column":15,"nodeType":"195","endLine":29,"endColumn":6},{"ruleId":"181","severity":1,"message":"216","line":29,"column":7,"nodeType":"183","endLine":29,"endColumn":9,"suggestions":"217"},{"ruleId":"211","severity":1,"message":"212","line":11,"column":42,"nodeType":"195","messageId":"213","endLine":11,"endColumn":44},{"ruleId":"218","severity":1,"message":"219","line":19,"column":1,"nodeType":"220","endLine":55,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":4,"column":1,"nodeType":"220","endLine":13,"endColumn":2},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["221"],["222"],"'Button' is defined but never used.","'Title' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'author' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'movieVariable'. Either include it or remove the dependency array.",["223"],"'Redirect' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchDetailInfo', 'movieId', and 'movieVariable'. Either include them or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'fetchFavoredMovie' and 'props.isAuth'. Either include them or remove the dependency array.",["225"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Badge' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'variable'. Either include it or remove the dependency array.",["227"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",{"desc":"228","fix":"229"},{"desc":"228","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [fetchMovies]",{"range":"241","text":"242"},{"range":"243","text":"242"},"Update the dependencies array to be: [movieVariable, postid]",{"range":"244","text":"245"},"Update the dependencies array to be: [fetchDetailInfo, movieId, movieVariable]",{"range":"246","text":"247"},"Update the dependencies array to be: [fetchFavoredMovie, props.isAuth]",{"range":"248","text":"249"},"Update the dependencies array to be: [props.userId, variable]",{"range":"250","text":"251"},"Update the dependencies array to be: [variable]",{"range":"252","text":"253"},[604,606],"[fetchMovies]",[527,529],[1235,1243],"[movieVariable, postid]",[1867,1869],"[fetchDetailInfo, movieId, movieVariable]",[633,635],"[fetchFavoredMovie, props.isAuth]",[1654,1656],"[props.userId, variable]",[966,968],"[variable]"]